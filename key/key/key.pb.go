// Code generated by protoc-gen-go. DO NOT EDIT.
// source: key.proto

package keyrpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Request struct {
	TranDateTime         string   `protobuf:"bytes,1,opt,name=TranDateTime,proto3" json:"TranDateTime,omitempty"`
	TerminalID           string   `protobuf:"bytes,2,opt,name=TerminalID,proto3" json:"TerminalID,omitempty"`
	ClientID             string   `protobuf:"bytes,3,opt,name=ClientID,proto3" json:"ClientID,omitempty"`
	STAN                 int32    `protobuf:"varint,4,opt,name=STAN,proto3" json:"STAN,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_2accf5df6005b7d4, []int{0}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetTranDateTime() string {
	if m != nil {
		return m.TranDateTime
	}
	return ""
}

func (m *Request) GetTerminalID() string {
	if m != nil {
		return m.TerminalID
	}
	return ""
}

func (m *Request) GetClientID() string {
	if m != nil {
		return m.ClientID
	}
	return ""
}

func (m *Request) GetSTAN() int32 {
	if m != nil {
		return m.STAN
	}
	return 0
}

// The response message containing the greetings
type Response struct {
	WorkingKey           string   `protobuf:"bytes,1,opt,name=WorkingKey,proto3" json:"WorkingKey,omitempty"`
	ResponseCode         int32    `protobuf:"varint,2,opt,name=ResponseCode,proto3" json:"ResponseCode,omitempty"`
	ResponseMessage      string   `protobuf:"bytes,3,opt,name=ResponseMessage,proto3" json:"ResponseMessage,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_2accf5df6005b7d4, []int{1}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetWorkingKey() string {
	if m != nil {
		return m.WorkingKey
	}
	return ""
}

func (m *Response) GetResponseCode() int32 {
	if m != nil {
		return m.ResponseCode
	}
	return 0
}

func (m *Response) GetResponseMessage() string {
	if m != nil {
		return m.ResponseMessage
	}
	return ""
}

func init() {
	proto.RegisterType((*Request)(nil), "keyrpc.Request")
	proto.RegisterType((*Response)(nil), "keyrpc.Response")
}

func init() { proto.RegisterFile("key.proto", fileDescriptor_2accf5df6005b7d4) }

var fileDescriptor_2accf5df6005b7d4 = []byte{
	// 247 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x90, 0xc1, 0x4b, 0xc3, 0x30,
	0x14, 0xc6, 0xad, 0x6e, 0x73, 0x7d, 0x4c, 0x26, 0x39, 0x95, 0x09, 0x32, 0x7a, 0xea, 0xa9, 0x07,
	0xf5, 0x1f, 0xb0, 0x2b, 0xc8, 0x10, 0x65, 0xc4, 0x82, 0xe7, 0xa8, 0x1f, 0x25, 0x74, 0x4b, 0x6a,
	0x12, 0xc1, 0x1e, 0xfc, 0xdf, 0xa5, 0x59, 0xa7, 0xed, 0x6e, 0x79, 0xbf, 0x3c, 0xde, 0xf7, 0xf1,
	0xa3, 0xb0, 0x42, 0x93, 0xd6, 0x46, 0x3b, 0xcd, 0x26, 0x15, 0x1a, 0x53, 0xbf, 0xc7, 0x3f, 0x74,
	0xce, 0xf1, 0xf9, 0x05, 0xeb, 0x58, 0x4c, 0xb3, 0xc2, 0x08, 0x95, 0x0b, 0x87, 0x42, 0xee, 0x10,
	0x05, 0xcb, 0x20, 0x09, 0xf9, 0x80, 0xb1, 0x6b, 0xa2, 0x02, 0x66, 0x27, 0x95, 0xd8, 0xae, 0xf3,
	0xe8, 0xd4, 0x6f, 0xf4, 0x08, 0x5b, 0xd0, 0x74, 0xb5, 0x95, 0x50, 0x6e, 0x9d, 0x47, 0x67, 0xfe,
	0xf7, 0x6f, 0x66, 0x8c, 0x46, 0x2f, 0xc5, 0xfd, 0x73, 0x34, 0x5a, 0x06, 0xc9, 0x98, 0xfb, 0x77,
	0xfc, 0x4d, 0x53, 0x0e, 0x5b, 0x6b, 0x65, 0xfd, 0xed, 0x57, 0x6d, 0x2a, 0xa9, 0xca, 0x47, 0x34,
	0x5d, 0x7a, 0x8f, 0xb4, 0xfd, 0x0e, 0xbb, 0x2b, 0xfd, 0x01, 0x9f, 0x3e, 0xe6, 0x03, 0xc6, 0x12,
	0x9a, 0x1f, 0xe6, 0x27, 0x58, 0x2b, 0x4a, 0x74, 0x35, 0x8e, 0xf1, 0x4d, 0xd6, 0x4f, 0x63, 0x77,
	0x74, 0xf1, 0x00, 0xd7, 0x03, 0xf3, 0x74, 0x2f, 0x28, 0xed, 0xec, 0x2c, 0x2e, 0xff, 0xc1, 0xfe,
	0x50, 0x7c, 0x92, 0x5d, 0xd1, 0x4c, 0xea, 0xb4, 0x6c, 0xa9, 0x11, 0x0e, 0x59, 0xc8, 0x85, 0xc3,
	0xa6, 0xf5, 0xbb, 0x09, 0xde, 0x26, 0x5e, 0xf4, 0xed, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xa1,
	0x4e, 0xf3, 0xae, 0x75, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// WorkingKeyClient is the client API for WorkingKey service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WorkingKeyClient interface {
	// Sends a greeting
	GetWorkingKey(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
}

type workingKeyClient struct {
	cc *grpc.ClientConn
}

func NewWorkingKeyClient(cc *grpc.ClientConn) WorkingKeyClient {
	return &workingKeyClient{cc}
}

func (c *workingKeyClient) GetWorkingKey(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/keyrpc.WorkingKey/GetWorkingKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WorkingKeyServer is the server API for WorkingKey service.
type WorkingKeyServer interface {
	// Sends a greeting
	GetWorkingKey(context.Context, *Request) (*Response, error)
}

// UnimplementedWorkingKeyServer can be embedded to have forward compatible implementations.
type UnimplementedWorkingKeyServer struct {
}

func (*UnimplementedWorkingKeyServer) GetWorkingKey(ctx context.Context, req *Request) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWorkingKey not implemented")
}

func RegisterWorkingKeyServer(s *grpc.Server, srv WorkingKeyServer) {
	s.RegisterService(&_WorkingKey_serviceDesc, srv)
}

func _WorkingKey_GetWorkingKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkingKeyServer).GetWorkingKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/keyrpc.WorkingKey/GetWorkingKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkingKeyServer).GetWorkingKey(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _WorkingKey_serviceDesc = grpc.ServiceDesc{
	ServiceName: "keyrpc.WorkingKey",
	HandlerType: (*WorkingKeyServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetWorkingKey",
			Handler:    _WorkingKey_GetWorkingKey_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "key.proto",
}
